module.exports = {
  Node: require('./ast/Node').Node,
  Program: require('./ast/Program').Program,
  VariableDeclarator: require('./ast/VariableDeclarator').VariableDeclarator,
  AssignmentExpression: require('./ast/expressions/AssignmentExpression').AssignmentExpression,
  BinaryExpression: require('./ast/expressions/BinaryExpression').BinaryExpression,
  CallExpression: require('./ast/expressions/CallExpression').CallExpression,
  ExistentialExpression: require('./ast/expressions/ExistentialExpression').ExistentialExpression,
  LogicalExpression: require('./ast/expressions/LogicalExpression').LogicalExpression,
  MemberExpression: require('./ast/expressions/MemberExpression').MemberExpression,
  NullCheckCallExpression: require('./ast/expressions/NullCheckCallExpression').NullCheckCallExpression,
  NullCoalescingExpression: require('./ast/expressions/NullCoalescingExpression').NullCoalescingExpression,
  NullPropagatingExpression: require('./ast/expressions/NullPropagatingExpression').NullPropagatingExpression,
  UnaryExpression: require('./ast/expressions/UnaryExpression').UnaryExpression,
  ObjectExpression: require('./ast/expressions/ObjectExpression').ObjectExpression,
  ArrayExpression: require('./ast/expressions/ArrayExpression').ArrayExpression,
  UpdateExpression: require('./ast/expressions/UpdateExpression').UpdateExpression,
  FunctionExpression: require('./ast/expressions/FunctionExpression').FunctionExpression,
  RangeMemberExpression: require('./ast/expressions/RangeMemberExpression').RangeMemberExpression,
  NewExpression: require('./ast/expressions/NewExpression').NewExpression,
  ThisExpression: require('./ast/expressions/ThisExpression').ThisExpression,
  SuperExpression: require('./ast/expressions/SuperExpression').SuperExpression,
  SplatExpression: require('./ast/expressions/SplatExpression').SplatExpression,
  ConditionalExpression: require('./ast/expressions/ConditionalExpression').ConditionalExpression,
  InExpression: require('./ast/expressions/InExpression').InExpression,
  ForInExpression: require('./ast/expressions/ForInExpression').ForInExpression,
  BlockStatement: require('./ast/statements/BlockStatement').BlockStatement,
  ExpressionStatement: require('./ast/statements/ExpressionStatement').ExpressionStatement,
  IfStatement: require('./ast/statements/IfStatement').IfStatement,
  ForStatement: require('./ast/statements/ForStatement').ForStatement,
  ForInStatement: require('./ast/statements/ForInStatement').ForInStatement,
  ForOfStatement: require('./ast/statements/ForOfStatement').ForOfStatement,
  WhileStatement: require('./ast/statements/WhileStatement').WhileStatement,
  UntilStatement: require('./ast/statements/UntilStatement').UntilStatement,
  VariableDeclarationStatement: require('./ast/statements/VariableDeclarationStatement').VariableDeclarationStatement,
  FunctionDeclarationStatement: require('./ast/statements/FunctionDeclarationStatement').FunctionDeclarationStatement,
  ReturnStatement: require('./ast/statements/ReturnStatement').ReturnStatement,
  ThrowStatement: require('./ast/statements/ThrowStatement').ThrowStatement,
  BreakStatement: require('./ast/statements/BreakStatement').BreakStatement,
  ContinueStatement: require('./ast/statements/ContinueStatement').ContinueStatement,
  DebuggerStatement: require('./ast/statements/DebuggerStatement').DebuggerStatement,
  UseStatement: require('./ast/statements/UseStatement').UseStatement,
  TryStatement: require('./ast/statements/TryStatement').TryStatement,
  SwitchStatement: require('./ast/statements/SwitchStatement').SwitchStatement,
  BooleanLiteral: require('./ast/literals/BooleanLiteral').BooleanLiteral,
  NumberLiteral: require('./ast/literals/NumberLiteral').NumberLiteral,
  StringLiteral: require('./ast/literals/StringLiteral').StringLiteral,
  NullLiteral: require('./ast/literals/NullLiteral').NullLiteral,
  Identifier: require('./ast/literals/Identifier').Identifier,
  Property: require('./ast/Property').Property,
  Range: require('./ast/Range').Range,  
  Parameter: require('./ast/Parameter').Parameter,
  CatchClause: require('./ast/CatchClause').CatchClause,
  CaseClause: require('./ast/CaseClause').CaseClause  
};